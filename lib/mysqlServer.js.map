{"version":3,"sources":["mysqlServer.js"],"names":["startMysql","process","platform","require","mysqld","startingPromise","readySet","stoppingPromise","mysqlServerReady","reinitialize","ready","then","resolve","stopMysqlServer","reject","stop","catch","err"],"mappings":";;;;;;;;;;;;;AACA,IAAIA,UAAJ;AACA,IAAIC,QAAQC,QAAR,KAAqB,OAAzB,EAAkC;AAChCF,eAAaG,QAAQ,0BAAR,CAAb;AACD,CAFD,MAEO,IAAIF,QAAQC,QAAR,KAAqB,QAAzB,EAAmC;AACxCF,eAAaG,QAAQ,0BAAR,CAAb;AACD,CAFM,MAEA;AACLH,eAAaG,QAAQ,0BAAR,CAAb;AACD;;AAED,IAAIC,SAAS,IAAb;AACA,IAAIC,kBAAkB,IAAtB;AACA,IAAIC,WAAW,KAAf;AACA,IAAIC,kBAAkB,IAAtB;AACO,MAAMC,8CAAmB,YAAW;AACzC,MAAIH,eAAJ,EAAqB;AACnB,WAAOA,eAAP;AACD;;AAED,MAAI,CAACC,QAAL,EAAe;AACbF,aAASJ,WAAW,IAAX,EAAiB,EAACS,cAAc,KAAf,EAAjB,CAAT;AACAJ,sBAAkBD,OAAOM,KAAP,CAAaC,IAAb,CAAkB,MAAM;AACxCL,iBAAW,IAAX;AACAD,wBAAkB,IAAlB;AACD,KAHiB,CAAlB;AAIA,WAAOA,eAAP;AACD,GAPD,MAOO;AACL,WAAO,kBAAQO,OAAR,CAAgB,IAAhB,CAAP;AACD;AACF,CAfM;;AAiBA,MAAMC,4CAAkB,YAAW;AACxC,MAAIN,eAAJ,EAAqB;AACnB,WAAOA,eAAP;AACD;;AAEDA,oBAAkB,sBAAY,CAACK,OAAD,EAAUE,MAAV,KAAqB;AACjDN,uBAAmBG,IAAnB,CAAwB,MAAM;AAC5B,aAAOP,OAAOW,IAAP,EAAP;AACD,KAFD,EAEGJ,IAFH,CAEQ,MAAM;AACZP,eAAS,IAAT;AACAC,wBAAkB,IAAlB;AACAC,iBAAW,KAAX;AACAC,wBAAkB,IAAlB;AACAK;AACD,KARD,EAQGI,KARH,CAQSC,OAAOH,OAAOG,GAAP,CARhB;AASD,GAViB,CAAlB;AAWA,SAAOV,eAAP;AACD,CAjBM","file":"mysqlServer.js","sourcesContent":["\nlet startMysql\nif (process.platform === 'win32') {\n  startMysql = require('mysql-server-5.7-win-x64')\n} else if (process.platform === 'darwin') {\n  startMysql = require('mysql-server-5.7-osx-x64')\n} else {\n  startMysql = require('mysql-server-5.7-lin-x64')\n}\n\nlet mysqld = null\nlet startingPromise = null\nlet readySet = false\nlet stoppingPromise = null\nexport const mysqlServerReady = function() {\n  if (startingPromise) {\n    return startingPromise\n  }\n\n  if (!readySet) {\n    mysqld = startMysql(null, {reinitialize: false})\n    startingPromise = mysqld.ready.then(() => {\n      readySet = true\n      startingPromise = null\n    })\n    return startingPromise\n  } else {\n    return Promise.resolve(true)\n  }\n}\n\nexport const stopMysqlServer = function() {\n  if (stoppingPromise) {\n    return stoppingPromise\n  }\n\n  stoppingPromise = new Promise((resolve, reject) => {\n    mysqlServerReady().then(() => {\n      return mysqld.stop()\n    }).then(() => {\n      mysqld = null;\n      startingPromise = null;\n      readySet = false;\n      stoppingPromise = null;\n      resolve();\n    }).catch(err => reject(err));\n  })\n  return stoppingPromise\n}"]}