{"version":3,"sources":["mysqlServer.js"],"names":["mysqld","startingPromise","readySet","stoppingPromise","mysqlServerReady","reinitialize","resolve","reject","stderr","on","data","test","console","log","toString","ready","match","stopMysqlServer","then","stop"],"mappings":";;;;;;;;;;;AAAA;;;;;;AAEA,IAAIA,SAAS,IAAb;AACA,IAAIC,kBAAkB,IAAtB;AACA,IAAIC,WAAW,KAAf;AACA,IAAIC,kBAAkB,IAAtB;AACO,MAAMC,8CAAmB,YAAW;AACzC,MAAIH,eAAJ,EAAqB;AACnB,WAAOA,eAAP;AACD;;AAED,MAAI,CAACC,QAAL,EAAe;AACbF,aAAS,2BAAW,IAAX,EAAiB,EAACK,cAAc,KAAf,EAAjB,CAAT;AACAJ,sBAAkB,sBAAY,CAACK,OAAD,EAAUC,MAAV,KAAqB;AACjDP,aAAOQ,MAAP,CAAcC,EAAd,CAAiB,MAAjB,EAA0BC,IAAD,IAAU;AACjC,YAAI,CAAC,UAAUC,IAAV,CAAeD,IAAf,CAAL,EAA2B;AACzBE,kBAAQC,GAAR,CAAYH,KAAKI,QAAL,EAAZ;AACD;AACD;;AAEA,cAAMC,QACJ,CAAC,CAACL,KAAKI,QAAL,GAAgBE,KAAhB,CAAsB,wBAAtB,CADJ;;AAGA,YAAID,KAAJ,EAAW;AACTH,kBAAQC,GAAR,CAAY,oBAAZ;AACAX,qBAAW,IAAX;AACAD,4BAAkB,IAAlB;AACAK;AACD;AACF,OAfD;AAgBD,KAjBiB,CAAlB;AAkBA,WAAOL,eAAP;AACD,GArBD,MAqBO;AACL,WAAO,kBAAQK,OAAR,CAAgB,IAAhB,CAAP;AACD;AACF,CA7BM;;AA+BA,MAAMW,4CAAkB,YAAW;AACxC,MAAId,eAAJ,EAAqB;AACnB,WAAOA,eAAP;AACD;;AAEDA,oBAAkB,sBAAY,CAACG,OAAD,EAAUC,MAAV,KAAqB;AACjDH,uBAAmBc,IAAnB,CAAwB,MAAMlB,OAAOmB,IAAP,EAA9B;AACAnB,WAAOS,EAAP,CAAU,OAAV,EAAmB,MAAM;AACvBG,cAAQC,GAAR,CAAY,sBAAZ;AACAb,eAAS,IAAT;AACAC,wBAAkB,IAAlB;AACAC,iBAAW,KAAX;AACAC,wBAAkB,IAAlB;AACAG;AACD,KAPD;AAQD,GAViB,CAAlB;AAWA,SAAOH,eAAP;AACD,CAjBM","file":"mysqlServer.js","sourcesContent":["import startMysql from \"mysql-server-5.7-osx-x64\";\n\nlet mysqld = null\nlet startingPromise = null\nlet readySet = false\nlet stoppingPromise = null\nexport const mysqlServerReady = function() {\n  if (startingPromise) {\n    return startingPromise\n  }\n\n  if (!readySet) {\n    mysqld = startMysql(null, {reinitialize: false})\n    startingPromise = new Promise((resolve, reject) => {\n      mysqld.stderr.on('data', (data) => {\n        if (!/\\[Note]/.test(data)) {\n          console.log(data.toString())\n        }\n        // console.log(data.toString())\n\n        const ready =\n          !!data.toString().match(/MySQL Community Server/);\n\n        if (ready) {\n          console.log('mysql server ready')\n          readySet = true\n          startingPromise = null\n          resolve()\n        }\n      })\n    })\n    return startingPromise\n  } else {\n    return Promise.resolve(true)\n  }\n}\n\nexport const stopMysqlServer = function() {\n  if (stoppingPromise) {\n    return stoppingPromise\n  }\n\n  stoppingPromise = new Promise((resolve, reject) => {\n    mysqlServerReady().then(() => mysqld.stop())\n    mysqld.on('close', () => {\n      console.log('stopped mysql server')\n      mysqld = null\n      startingPromise = null\n      readySet = false\n      stoppingPromise = null\n      resolve()\n    })\n  })\n  return stoppingPromise\n}"]}